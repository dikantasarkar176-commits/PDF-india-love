<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>PDF Compression Tool | DocuMagic</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdf-lib/1.17.1/pdf-lib.min.js"></script>
    <style>
        :root {
            --primary: #4361ee;
            --primary-dark: #3a56d4;
            --secondary: #7209b7;
            --accent: #f72585;
            --light: #f8f9fa;
            --dark: #212529;
            --gray: #6c757d;
            --light-gray: #e9ecef;
            --success: #4cc9f0;
            --warning: #ff9e00;
            --danger: #e63946;
            --border-radius: 12px;
            --shadow: 0 10px 20px rgba(0,0,0,0.1);
            --transition: all 0.3s ease;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', system-ui, sans-serif;
        }

        body {
            background: linear-gradient(135deg, #f5f7fa 0%, #e4e8f0 100%);
            color: var(--dark);
            line-height: 1.6;
            min-height: 100vh;
            padding: 20px;
        }

        .container {
            width: 100%;
            max-width: 1000px;
            margin: 0 auto;
            padding: 0 20px;
        }

        header {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            box-shadow: var(--shadow);
            border-radius: var(--border-radius);
            position: sticky;
            top: 20px;
            z-index: 1000;
            margin-bottom: 30px;
        }

        .header-content {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 15px 25px;
        }

        .logo {
            display: flex;
            align-items: center;
            gap: 10px;
            font-size: 1.8rem;
            font-weight: 800;
            color: var(--primary);
            text-decoration: none;
        }

        .logo i {
            color: var(--secondary);
        }

        .tool-section {
            background: white;
            border-radius: var(--border-radius);
            box-shadow: var(--shadow);
            padding: 40px;
            margin-bottom: 30px;
            animation: fadeIn 0.5s ease;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .tool-header {
            text-align: center;
            margin-bottom: 40px;
        }

        .tool-header h2 {
            color: var(--primary);
            margin-bottom: 10px;
            font-size: 2.2rem;
        }

        .tool-header p {
            color: var(--gray);
            max-width: 600px;
            margin: 0 auto;
        }

        .upload-area {
            border: 2px dashed var(--light-gray);
            border-radius: var(--border-radius);
            padding: 50px 20px;
            text-align: center;
            margin-bottom: 30px;
            transition: var(--transition);
            cursor: pointer;
            background: var(--light);
        }

        .upload-area:hover {
            border-color: var(--primary);
            background: rgba(67, 97, 238, 0.05);
        }

        .upload-area.active {
            border-color: var(--primary);
            background: rgba(67, 97, 238, 0.08);
        }

        .upload-area i {
            font-size: 3.5rem;
            color: var(--gray);
            margin-bottom: 20px;
        }

        .upload-area h3 {
            margin-bottom: 10px;
            color: var(--dark);
        }

        .upload-area p {
            color: var(--gray);
            margin-bottom: 20px;
        }

        .btn {
            display: inline-block;
            background: var(--primary);
            color: white;
            padding: 12px 28px;
            border: none;
            border-radius: 50px;
            cursor: pointer;
            font-weight: 600;
            font-size: 1rem;
            transition: var(--transition);
            text-decoration: none;
        }

        .btn:hover {
            background: var(--primary-dark);
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }

        .btn-secondary {
            background: var(--secondary);
        }

        .btn-secondary:hover {
            background: #6511a0;
        }

        .btn-success {
            background: var(--success);
        }

        .btn-success:hover {
            background: #3ab3d6;
        }

        .btn-warning {
            background: var(--warning);
        }

        .btn-warning:hover {
            background: #e68e00;
        }

        .btn-danger {
            background: var(--danger);
        }

        .btn-danger:hover {
            background: #d32f3a;
        }

        .btn:disabled {
            background: var(--light-gray);
            color: var(--gray);
            cursor: not-allowed;
            transform: none;
            box-shadow: none;
        }

        .file-list {
            margin: 25px 0;
        }

        .file-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 15px;
            border-radius: var(--border-radius);
            background: var(--light);
            margin-bottom: 10px;
            transition: var(--transition);
        }

        .file-item:hover {
            background: #e9ecef;
        }

        .file-info {
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .file-icon {
            font-size: 1.5rem;
            color: var(--primary);
        }

        .file-details h4 {
            margin-bottom: 5px;
        }

        .file-details p {
            color: var(--gray);
            font-size: 0.9rem;
        }

        .file-actions button {
            background: none;
            border: none;
            cursor: pointer;
            color: var(--accent);
            font-size: 1.2rem;
            transition: var(--transition);
        }

        .file-actions button:hover {
            color: #d3126b;
        }

        .options {
            margin: 30px 0;
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 20px;
        }

        .option-group {
            margin-bottom: 20px;
        }

        .option-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            color: var(--dark);
        }

        .option-group select, .option-group input {
            width: 100%;
            padding: 12px 15px;
            border: 1px solid var(--light-gray);
            border-radius: var(--border-radius);
            background: white;
            font-size: 1rem;
            transition: var(--transition);
        }

        .option-group select:focus, .option-group input:focus {
            border-color: var(--primary);
            outline: none;
            box-shadow: 0 0 0 3px rgba(67, 97, 238, 0.2);
        }

        .compression-level {
            display: flex;
            flex-direction: column;
            gap: 10px;
            margin: 20px 0;
        }

        .level-option {
            display: flex;
            align-items: center;
            padding: 15px;
            border: 2px solid var(--light-gray);
            border-radius: var(--border-radius);
            cursor: pointer;
            transition: var(--transition);
        }

        .level-option:hover {
            border-color: var(--primary);
        }

        .level-option.selected {
            border-color: var(--primary);
            background: rgba(67, 97, 238, 0.05);
        }

        .level-radio {
            margin-right: 15px;
            width: 20px;
            height: 20px;
            border: 2px solid var(--gray);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .level-option.selected .level-radio {
            border-color: var(--primary);
        }

        .level-option.selected .level-radio::after {
            content: '';
            width: 10px;
            height: 10px;
            background: var(--primary);
            border-radius: 50%;
        }

        .level-details {
            flex: 1;
        }

        .level-details h4 {
            margin-bottom: 5px;
        }

        .level-details p {
            color: var(--gray);
            font-size: 0.9rem;
        }

        .progress-container {
            margin: 30px 0;
            display: none;
        }

        .progress-info {
            display: flex;
            justify-content: space-between;
            margin-bottom: 10px;
        }

        .progress-bar {
            height: 10px;
            background-color: var(--light-gray);
            border-radius: 5px;
            overflow: hidden;
        }

        .progress {
            height: 100%;
            background: linear-gradient(to right, var(--primary), var(--secondary));
            width: 0%;
            transition: width 0.4s ease;
        }

        .result-area {
            margin: 30px 0;
            display: none;
            text-align: center;
            padding: 30px;
            background: var(--light);
            border-radius: var(--border-radius);
        }

        .comparison {
            display: flex;
            justify-content: space-around;
            margin: 25px 0;
            flex-wrap: wrap;
            gap: 20px;
        }

        .file-comparison {
            text-align: center;
            flex: 1;
            min-width: 200px;
        }

        .file-comparison .file-icon {
            font-size: 3rem;
            margin-bottom: 15px;
        }

        .file-comparison h4 {
            margin-bottom: 10px;
        }

        .file-comparison .file-size {
            font-size: 1.5rem;
            font-weight: 700;
            margin-bottom: 5px;
        }

        .file-comparison .file-size.original {
            color: var(--danger);
        }

        .file-comparison .file-size.compressed {
            color: var(--success);
        }

        .savings {
            text-align: center;
            margin: 20px 0;
            padding: 20px;
            background: white;
            border-radius: var(--border-radius);
            box-shadow: var(--shadow);
        }

        .savings h3 {
            margin-bottom: 10px;
            color: var(--primary);
        }

        .savings .savings-amount {
            font-size: 2rem;
            font-weight: 800;
            color: var(--success);
            margin-bottom: 5px;
        }

        .savings .savings-percent {
            font-size: 1.2rem;
            color: var(--gray);
        }

        .download-btn {
            display: inline-flex;
            align-items: center;
            gap: 10px;
            margin: 20px auto;
        }

        .empty-state {
            text-align: center;
            padding: 30px;
            color: var(--gray);
        }

        .empty-state i {
            font-size: 3rem;
            margin-bottom: 15px;
            color: var(--light-gray);
        }

        @media (max-width: 768px) {
            .tool-section {
                padding: 30px 20px;
            }

            .options {
                grid-template-columns: 1fr;
            }

            .comparison {
                flex-direction: column;
            }
        }

        @media (max-width: 576px) {
            .tool-header h2 {
                font-size: 1.8rem;
            }

            .upload-area {
                padding: 30px 15px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <div class="header-content">
                <a href="#" class="logo">
                    <i class="fas fa-magic"></i>
                    <span>DocuMagic</span>
                </a>
            </div>
        </header>

        <!-- PDF Compression Tool Section -->
        <div class="tool-section active" id="pdf-compress-tool">
            <div class="tool-header">
                <h2>PDF Compression</h2>
                <p>Reduce your PDF file size significantly without losing quality</p>
            </div>
            
            <div class="upload-area" id="pdf-compress-upload">
                <i class="fas fa-cloud-upload-alt"></i>
                <h3>Upload Your PDF File</h3>
                <p>Drag & drop your file here or click to browse</p>
                <input type="file" id="pdf-compress-input" accept=".pdf" style="display: none;">
                <button class="btn" id="pdf-compress-browse">Select PDF File</button>
            </div>
            
            <div class="file-list" id="pdf-compress-file-list">
                <div class="empty-state" id="pdf-compress-empty">
                    <i class="fas fa-folder-open"></i>
                    <p>No PDF file selected yet</p>
                </div>
            </div>
            
            <div class="options">
                <div class="option-group">
                    <label>Compression Level</label>
                    <div class="compression-level">
                        <div class="level-option" data-level="low">
                            <div class="level-radio"></div>
                            <div class="level-details">
                                <h4>Low Compression</h4>
                                <p>Best quality, smaller size reduction</p>
                                <p class="estimated-saving">Estimated saving: 10-20%</p>
                            </div>
                        </div>
                        <div class="level-option selected" data-level="medium">
                            <div class="level-radio"></div>
                            <div class="level-details">
                                <h4>Medium Compression</h4>
                                <p>Good balance of quality and size</p>
                                <p class="estimated-saving">Estimated saving: 30-50%</p>
                            </div>
                        </div>
                        <div class="level-option" data-level="high">
                            <div class="level-radio"></div>
                            <div class="level-details">
                                <h4>High Compression</h4>
                                <p>Smaller file size, some quality loss</p>
                                <p class="estimated-saving">Estimated saving: 50-70%</p>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="option-group">
                    <label for="pdf-compress-optimize">Optimize For</label>
                    <select id="pdf-compress-optimize">
                        <option value="web">Web (Fast Loading)</option>
                        <option value="print" selected>Print (High Quality)</option>
                        <option value="email">Email (Smallest Size)</option>
                    </select>
                </div>
                
                <div class="option-group">
                    <label for="pdf-compress-downsample">Downsample Images</label>
                    <select id="pdf-compress-downsample">
                        <option value="yes" selected>Yes (Recommended)</option>
                        <option value="no">No (Keep Original Quality)</option>
                    </select>
                </div>
            </div>
            
            <div style="text-align: center;">
                <button class="btn btn-success" id="pdf-compress-convert" disabled>Compress PDF</button>
            </div>
            
            <div class="progress-container" id="pdf-compress-progress">
                <div class="progress-info">
                    <span>Processing...</span>
                    <span id="pdf-compress-progress-text">0%</span>
                </div>
                <div class="progress-bar">
                    <div class="progress" id="pdf-compress-progress-bar"></div>
                </div>
            </div>
            
            <div class="result-area" id="pdf-compress-result">
                <h3>Compression Complete!</h3>
                <p>Your PDF has been successfully compressed</p>
                
                <div class="comparison">
                    <div class="file-comparison">
                        <i class="fas fa-file-pdf file-icon" style="color: var(--danger);"></i>
                        <h4>Original PDF</h4>
                        <div class="file-size original" id="original-size">0 KB</div>
                        <p>Before compression</p>
                    </div>
                    
                    <div class="file-comparison">
                        <i class="fas fa-file-pdf file-icon" style="color: var(--success);"></i>
                        <h4>Compressed PDF</h4>
                        <div class="file-size compressed" id="compressed-size">0 KB</div>
                        <p>After compression</p>
                    </div>
                </div>
                
                <div class="savings">
                    <h3>Total Savings</h3>
                    <div class="savings-amount" id="savings-amount">0 KB</div>
                    <div class="savings-percent" id="savings-percent">0%</div>
                </div>
                
                <button class="btn download-btn" id="pdf-compress-download">
                    <i class="fas fa-download"></i> Download Compressed PDF
                </button>
            </div>
        </div>
    </div>

    <script>
        // DOM elements
        const pdfCompressUpload = document.getElementById('pdf-compress-upload');
        const pdfCompressInput = document.getElementById('pdf-compress-input');
        const pdfCompressBrowse = document.getElementById('pdf-compress-browse');
        const pdfCompressFileList = document.getElementById('pdf-compress-file-list');
        const pdfCompressEmpty = document.getElementById('pdf-compress-empty');
        const pdfCompressConvert = document.getElementById('pdf-compress-convert');
        const pdfCompressProgress = document.getElementById('pdf-compress-progress');
        const pdfCompressProgressBar = document.getElementById('pdf-compress-progress-bar');
        const pdfCompressProgressText = document.getElementById('pdf-compress-progress-text');
        const pdfCompressResult = document.getElementById('pdf-compress-result');
        const pdfCompressDownload = document.getElementById('pdf-compress-download');
        
        const originalSizeElement = document.getElementById('original-size');
        const compressedSizeElement = document.getElementById('compressed-size');
        const savingsAmountElement = document.getElementById('savings-amount');
        const savingsPercentElement = document.getElementById('savings-percent');

        // Compression level selection
        const levelOptions = document.querySelectorAll('.level-option');
        let selectedLevel = 'medium';
        
        levelOptions.forEach(option => {
            option.addEventListener('click', function() {
                levelOptions.forEach(opt => opt.classList.remove('selected'));
                this.classList.add('selected');
                selectedLevel = this.getAttribute('data-level');
            });
        });

        // Store selected file
        let selectedFile = null;

        // Browse button click
        pdfCompressBrowse.addEventListener('click', function() {
            pdfCompressInput.click();
        });

        // File input change
        pdfCompressInput.addEventListener('change', function(e) {
            if (e.target.files.length > 0) {
                handleFileSelection(e.target.files[0]);
            }
        });

        // Drag and drop functionality
        pdfCompressUpload.addEventListener('dragover', function(e) {
            e.preventDefault();
            this.classList.add('active');
        });

        pdfCompressUpload.addEventListener('dragleave', function(e) {
            e.preventDefault();
            this.classList.remove('active');
        });

        pdfCompressUpload.addEventListener('drop', function(e) {
            e.preventDefault();
            this.classList.remove('active');
            
            if (e.dataTransfer.files.length > 0) {
                handleFileSelection(e.dataTransfer.files[0]);
            }
        });

        // Handle file selection
        function handleFileSelection(file) {
            if (file.type !== 'application/pdf') {
                alert('Please select a PDF file.');
                return;
            }
            
            selectedFile = file;
            
            // Update UI
            updateFileList();
            updateConvertButton();
        }

        // Update file list display
        function updateFileList() {
            if (!selectedFile) {
                pdfCompressEmpty.style.display = 'block';
                pdfCompressFileList.innerHTML = '';
                pdfCompressFileList.appendChild(pdfCompressEmpty);
                return;
            }
            
            pdfCompressEmpty.style.display = 'none';
            
            // Clear existing list (except empty state)
            const fileListItems = pdfCompressFileList.querySelectorAll('.file-item');
            fileListItems.forEach(item => item.remove());
            
            // Add file to list
            const fileItem = document.createElement('div');
            fileItem.className = 'file-item';
            fileItem.innerHTML = `
                <div class="file-info">
                    <i class="fas fa-file-pdf file-icon"></i>
                    <div class="file-details">
                        <h4>${selectedFile.name}</h4>
                        <p>${formatFileSize(selectedFile.size)}</p>
                    </div>
                </div>
                <div class="file-actions">
                    <button class="remove-file"><i class="fas fa-times"></i></button>
                </div>
            `;
            
            pdfCompressFileList.appendChild(fileItem);
            
            // Remove file functionality
            fileItem.querySelector('.remove-file').addEventListener('click', function() {
                selectedFile = null;
                updateFileList();
                updateConvertButton();
            });
        }

        // Update convert button state
        function updateConvertButton() {
            pdfCompressConvert.disabled = !selectedFile;
        }

        // Format file size
        function formatFileSize(bytes) {
            if (bytes === 0) return '0 Bytes';
            const k = 1024;
            const sizes = ['Bytes', 'KB', 'MB', 'GB'];
            const i = Math.floor(Math.log(bytes) / Math.log(k));
            return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
        }

        // Convert button click
        pdfCompressConvert.addEventListener('click', function() {
            if (!selectedFile) {
                alert('Please select a PDF file first.');
                return;
            }
            
            // Show progress
            pdfCompressProgress.style.display = 'block';
            pdfCompressProgressBar.style.width = '0%';
            pdfCompressProgressText.textContent = '0%';
            
            // Start compression
            compressPDF();
        });

        // Compress PDF
        async function compressPDF() {
            try {
                // Get options
                const optimizeFor = document.getElementById('pdf-compress-optimize').value;
                const downsample = document.getElementById('pdf-compress-downsample').value;
                
                // Calculate compression ratio based on selected level
                let compressionRatio = 0.7; // Default for medium
                if (selectedLevel === 'low') compressionRatio = 0.9;
                if (selectedLevel === 'high') compressionRatio = 0.5;
                
                // Adjust based on optimization target
                if (optimizeFor === 'web') compressionRatio *= 0.9;
                if (optimizeFor === 'email') compressionRatio *= 0.7;
                
                // Simulate processing steps
                let progress = 0;
                const steps = [
                    "Loading PDF...",
                    "Analyzing content...",
                    "Optimizing images...",
                    "Compressing text...",
                    "Finalizing..."
                ];
                
                for (let i = 0; i < steps.length; i++) {
                    // Update progress
                    progress = (i / steps.length) * 100;
                    pdfCompressProgressBar.style.width = `${progress}%`;
                    pdfCompressProgressText.textContent = `${Math.round(progress)}%`;
                    
                    // Simulate processing time
                    await new Promise(resolve => setTimeout(resolve, 500));
                }
                
                // Complete progress
                pdfCompressProgressBar.style.width = '100%';
                pdfCompressProgressText.textContent = '100%';
                
                // Calculate compressed size
                const originalSize = selectedFile.size;
                const compressedSize = Math.round(originalSize * compressionRatio);
                
                // Generate a compressed PDF blob (simulated)
                // In a real implementation, you would use pdf-lib or similar to actually compress the PDF
                const compressedBlob = new Blob(
                    [await selectedFile.arrayBuffer()], 
                    { type: 'application/pdf' }
                );
                
                // In a real implementation, the blob would be smaller due to compression
                // For simulation purposes, we'll just use the original file but show the calculated sizes
                const compressedUrl = URL.createObjectURL(compressedBlob);
                
                // Show result with calculated sizes
                originalSizeElement.textContent = formatFileSize(originalSize);
                compressedSizeElement.textContent = formatFileSize(compressedSize);
                
                const savings = originalSize - compressedSize;
                const savingsPercent = ((savings / originalSize) * 100).toFixed(1);
                
                savingsAmountElement.textContent = formatFileSize(savings);
                savingsPercentElement.textContent = `${savingsPercent}%`;
                
                // Show result
                pdfCompressResult.style.display = 'block';
                
                // Set up download
                pdfCompressDownload.onclick = function() {
                    const link = document.createElement('a');
                    link.href = compressedUrl;
                    link.download = `compressed-${selectedFile.name}`;
                    document.body.appendChild(link);
                    link.click();
                    document.body.removeChild(link);
                };
                
            } catch (error) {
                console.error('Error compressing PDF:', error);
                alert('An error occurred during compression. Please try again.');
            }
        }

        // Note: This is a simulation of PDF compression.
        // In a real implementation, you would use a library like pdf-lib to actually compress the PDF.
        // The actual compression would involve:
        // 1. Removing unused objects
        // 2. Optimizing images (downsampling, compression)
        // 3. Removing redundant content
        // 4. Using more efficient encoding
    </script>
</body>
</html>
